{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kmulq\\\\Desktop\\\\code\\\\pokedex\\\\src\\\\components\\\\List\\\\List.js\";\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport ListItem from \"../ListItem\";\n\nconst List = ({\n  pokemonList\n}) => {\n  return (// If the pokemonList has content, render the results in the list as a table\n    pokemonList.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Weaknesses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: pokemonList.map((pokemon, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n            number: pokemon.num,\n            name: pokemon.name,\n            type: pokemon.type,\n            weaknesses: pokemon.weaknesses\n          }, pokemon.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // If pokemonList is an empty array, return message\n    _jsxDEV(\"p\", {\n      children: \"No Pokemon Found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/kmulq/Desktop/code/pokedex/src/components/List/List.js"],"names":["React","Table","ListItem","List","pokemonList","length","map","pokemon","idx","num","name","type","weaknesses","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAChC,SACE;AACAA,IAAAA,WAAW,CAACC,MAAZ,gBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAA8B,QAAA,UAAU,MAAxC;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,oBAEGD,WAAW,CAACE,GAAZ,CAAgB,CAACC,OAAD,EAAUC,GAAV,kBACf,QAAC,QAAD;AAEE,YAAA,MAAM,EAAED,OAAO,CAACE,GAFlB;AAGE,YAAA,IAAI,EAAEF,OAAO,CAACG,IAHhB;AAIE,YAAA,IAAI,EAAEH,OAAO,CAACI,IAJhB;AAKE,YAAA,UAAU,EAAEJ,OAAO,CAACK;AALtB,aACOL,OAAO,CAACM,EADf;AAAA;AAAA;AAAA;AAAA,kBADD;AAFH;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAAA;AA4BE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BJ;AAkCD,CAnCD;;KAAMV,I;AAqCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport ListItem from \"../ListItem\";\n\nconst List = ({ pokemonList }) => {\n  return (\n    // If the pokemonList has content, render the results in the list as a table\n    pokemonList.length ? (\n      <>\n        <h1>List</h1>\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>No.</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Weaknesses</th>\n              <th>Details</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* Map through the pokemonList and render a list item for each pokemon */}\n            {pokemonList.map((pokemon, idx) => (\n              <ListItem\n                key={pokemon.id}\n                number={pokemon.num}\n                name={pokemon.name}\n                type={pokemon.type}\n                weaknesses={pokemon.weaknesses}\n              />\n            ))}\n          </tbody>\n        </Table>\n      </>\n    ) : (\n      // If pokemonList is an empty array, return message\n      <p>No Pokemon Found.</p>\n    )\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}
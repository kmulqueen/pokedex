{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kmulq\\\\Desktop\\\\code\\\\pokedex\\\\src\\\\components\\\\List\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport ListItem from \"../ListItem\";\n\nconst List = () => {\n  _s();\n\n  // Set pokemonList state and declare it as an empty array\n  const [pokemonList, setPokemonList] = useState([]); // Function to fetch list of pokemon & set the pokemonList state to the response data\n\n  const fetchPokemon = async () => {\n    const res = await axios.get(\"https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json\");\n    setPokemonList(res.data.pokemon);\n  }; // If the pokemonList state is an empty array, run the fetchPokemon function\n\n\n  useEffect(() => {\n    if (!pokemonList.length) {\n      fetchPokemon();\n    }\n\n    console.log(pokemonList);\n  }, [pokemonList]);\n  return (// If the pokemonList has content, render the results in the list as a table\n    pokemonList.length ? /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weaknesses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pokemonList.map((pokemon, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n          number: pokemon.num,\n          name: pokemon.name,\n          type: pokemon.type,\n          weaknesses: pokemon.weaknesses\n        }, pokemon.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this) :\n    /*#__PURE__*/\n    // If pokemonList is an empty array, return message\n    _jsxDEV(\"p\", {\n      children: \"No Pokemon Found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n_s(List, \"8WCeILIBbUks4eWUNugK57Uz8MA=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/kmulq/Desktop/code/pokedex/src/components/List/List.js"],"names":["React","useEffect","useState","axios","Table","ListItem","List","pokemonList","setPokemonList","fetchPokemon","res","get","data","pokemon","length","console","log","map","idx","num","name","type","weaknesses","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C,CAFiB,CAIjB;;AACA,QAAMO,YAAY,GAAG,YAAY;AAC/B,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAChB,+EADgB,CAAlB;AAGAH,IAAAA,cAAc,CAACE,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAd;AACD,GALD,CALiB,CAYjB;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,WAAW,CAACO,MAAjB,EAAyB;AACvBL,MAAAA,YAAY;AACb;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACD,GALQ,EAKN,CAACA,WAAD,CALM,CAAT;AAOA,SACE;AACAA,IAAAA,WAAW,CAACO,MAAZ,gBACE,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,UAAU,MAAxC;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBAEGP,WAAW,CAACU,GAAZ,CAAgB,CAACJ,OAAD,EAAUK,GAAV,kBACf,QAAC,QAAD;AAEE,UAAA,MAAM,EAAEL,OAAO,CAACM,GAFlB;AAGE,UAAA,IAAI,EAAEN,OAAO,CAACO,IAHhB;AAIE,UAAA,IAAI,EAAEP,OAAO,CAACQ,IAJhB;AAKE,UAAA,UAAU,EAAER,OAAO,CAACS;AALtB,WACOT,OAAO,CAACU,EADf;AAAA;AAAA;AAAA;AAAA,gBADD;AAFH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAwBE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BJ;AA8BD,CAlDD;;GAAMjB,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport ListItem from \"../ListItem\";\r\n\r\nconst List = () => {\r\n  // Set pokemonList state and declare it as an empty array\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n\r\n  // Function to fetch list of pokemon & set the pokemonList state to the response data\r\n  const fetchPokemon = async () => {\r\n    const res = await axios.get(\r\n      \"https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json\"\r\n    );\r\n    setPokemonList(res.data.pokemon);\r\n  };\r\n\r\n  // If the pokemonList state is an empty array, run the fetchPokemon function\r\n  useEffect(() => {\r\n    if (!pokemonList.length) {\r\n      fetchPokemon();\r\n    }\r\n    console.log(pokemonList);\r\n  }, [pokemonList]);\r\n\r\n  return (\r\n    // If the pokemonList has content, render the results in the list as a table\r\n    pokemonList.length ? (\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>No.</th>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Weaknesses</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Map through the pokemonList and render a list item for each pokemon */}\r\n          {pokemonList.map((pokemon, idx) => (\r\n            <ListItem\r\n              key={pokemon.id}\r\n              number={pokemon.num}\r\n              name={pokemon.name}\r\n              type={pokemon.type}\r\n              weaknesses={pokemon.weaknesses}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    ) : (\r\n      // If pokemonList is an empty array, return message\r\n      <p>No Pokemon Found.</p>\r\n    )\r\n  );\r\n};\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}
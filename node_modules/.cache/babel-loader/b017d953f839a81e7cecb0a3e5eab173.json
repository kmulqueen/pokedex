{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kmulq\\\\Desktop\\\\code\\\\pokedex\\\\src\\\\pages\\\\HomePage\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport List from \"../../components/List\";\n\nconst HomePage = () => {\n  _s();\n\n  // Set pokemonList state and declare it as an empty array\n  const [pokemonList, setPokemonList] = useState([]); // Set search state and declare it as an empty string\n\n  const [search, setSearch] = useState(\"\"); // Set types state and declare it as an array with the 15 types of pokemon\n\n  const [pokemonTypes, setPokemonTypes] = useState([\"Bug\", \"Dragon\", \"Electric\", \"Fighting\", \"Fire\", \"Flying\", \"Ghost\", \"Grass\", \"Ground\", \"Ice\", \"Normal\", \"Poison\", \"Psychic\", \"Rock\", \"Water\"]); // Function to fetch list of pokemon & set the pokemonList state to the response data\n\n  const fetchPokemon = async () => {\n    const res = await axios.get(\"https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json\");\n    setPokemonList(res.data.pokemon);\n  }; // Function to display search results\n\n\n  const searchPokemonHandler = e => {\n    // Prevent default submission behavior (page reload)\n    e.preventDefault(); // Declare a searchResult variable and assign it to the result of the find method\n\n    const searchResult = pokemonList.find(pokemon => pokemon.name.toLowerCase() === search.toLowerCase()); // If a result was found update the list to only include the result, else re-populate pokemon list\n\n    if (searchResult) {\n      setPokemonList([searchResult]);\n    } else {\n      fetchPokemon();\n    }\n  }; // Function to reset search\n\n\n  const searchResetHandler = () => {\n    // Clear search field\n    setSearch(\"\"); // Re-populate list of pokemon\n\n    fetchPokemon();\n  }; // Function to filter pokemon\n\n\n  const filterPokemonHandler = e => {\n    // Prevent default submission behavior (page reload)\n    e.preventDefault();\n  }; // If the pokemonList state is an empty array, run the fetchPokemon function\n\n\n  useEffect(() => {\n    if (!pokemonList.length) {\n      fetchPokemon();\n    }\n  }, [pokemonList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search by Pokemon Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: searchPokemonHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formSearch\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Pokemon Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Pokemon Name...\",\n          onChange: e => setSearch(e.target.value),\n          value: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: searchResetHandler,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Filter Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: filterPokemonHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formTypeFilterCheckbox\",\n        children: pokemonTypes.map((type, idx) => /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          type: \"checkbox\",\n          label: type\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Apply Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      pokemonList: pokemonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"VqodGSOeugq5LsBObnAXR136PGY=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/kmulq/Desktop/code/pokedex/src/pages/HomePage/HomePage.js"],"names":["React","useEffect","useState","axios","Form","Button","List","HomePage","pokemonList","setPokemonList","search","setSearch","pokemonTypes","setPokemonTypes","fetchPokemon","res","get","data","pokemon","searchPokemonHandler","e","preventDefault","searchResult","find","name","toLowerCase","searchResetHandler","filterPokemonHandler","length","target","value","map","type","idx"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAFqB,CAGrB;;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAJqB,CAKrB;;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAC/C,KAD+C,EAE/C,QAF+C,EAG/C,UAH+C,EAI/C,UAJ+C,EAK/C,MAL+C,EAM/C,QAN+C,EAO/C,OAP+C,EAQ/C,OAR+C,EAS/C,QAT+C,EAU/C,KAV+C,EAW/C,QAX+C,EAY/C,QAZ+C,EAa/C,SAb+C,EAc/C,MAd+C,EAe/C,OAf+C,CAAD,CAAhD,CANqB,CAwBrB;;AACA,QAAMY,YAAY,GAAG,YAAY;AAC/B,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAChB,+EADgB,CAAlB;AAGAP,IAAAA,cAAc,CAACM,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAd;AACD,GALD,CAzBqB,CAgCrB;;;AACA,QAAMC,oBAAoB,GAAIC,CAAD,IAAO;AAClC;AACAA,IAAAA,CAAC,CAACC,cAAF,GAFkC,CAIlC;;AACA,UAAMC,YAAY,GAAGd,WAAW,CAACe,IAAZ,CAClBL,OAAD,IAAaA,OAAO,CAACM,IAAR,CAAaC,WAAb,OAA+Bf,MAAM,CAACe,WAAP,EADzB,CAArB,CALkC,CASlC;;AACA,QAAIH,YAAJ,EAAkB;AAChBb,MAAAA,cAAc,CAAC,CAACa,YAAD,CAAD,CAAd;AACD,KAFD,MAEO;AACLR,MAAAA,YAAY;AACb;AACF,GAfD,CAjCqB,CAkDrB;;;AACA,QAAMY,kBAAkB,GAAG,MAAM;AAC/B;AACAf,IAAAA,SAAS,CAAC,EAAD,CAAT,CAF+B,CAG/B;;AACAG,IAAAA,YAAY;AACb,GALD,CAnDqB,CA0DrB;;;AACA,QAAMa,oBAAoB,GAAIP,CAAD,IAAO;AAClC;AACAA,IAAAA,CAAC,CAACC,cAAF;AACD,GAHD,CA3DqB,CAgErB;;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,WAAW,CAACoB,MAAjB,EAAyB;AACvBd,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACN,WAAD,CAJM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEW,oBAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,uBAFd;AAGE,UAAA,QAAQ,EAAGC,CAAD,IAAOT,SAAS,CAACS,CAAC,CAACS,MAAF,CAASC,KAAV,CAH5B;AAIE,UAAA,KAAK,EAAEpB;AAJT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,OAAO,EAAEgB,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC,oBAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,wBAAtB;AAAA,kBACGf,YAAY,CAACmB,GAAb,CAAiB,CAACC,IAAD,EAAOC,GAAP,kBAChB,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,MAAM,MAAlB;AAA6B,UAAA,IAAI,EAAC,UAAlC;AAA6C,UAAA,KAAK,EAAED;AAApD,WAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eAgCE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEzB;AAAnB;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA,kBADF;AAoCD,CA1GD;;GAAMD,Q;;KAAAA,Q;AA4GN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport List from \"../../components/List\";\r\n\r\nconst HomePage = () => {\r\n  // Set pokemonList state and declare it as an empty array\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  // Set search state and declare it as an empty string\r\n  const [search, setSearch] = useState(\"\");\r\n  // Set types state and declare it as an array with the 15 types of pokemon\r\n  const [pokemonTypes, setPokemonTypes] = useState([\r\n    \"Bug\",\r\n    \"Dragon\",\r\n    \"Electric\",\r\n    \"Fighting\",\r\n    \"Fire\",\r\n    \"Flying\",\r\n    \"Ghost\",\r\n    \"Grass\",\r\n    \"Ground\",\r\n    \"Ice\",\r\n    \"Normal\",\r\n    \"Poison\",\r\n    \"Psychic\",\r\n    \"Rock\",\r\n    \"Water\",\r\n  ]);\r\n\r\n  // Function to fetch list of pokemon & set the pokemonList state to the response data\r\n  const fetchPokemon = async () => {\r\n    const res = await axios.get(\r\n      \"https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json\"\r\n    );\r\n    setPokemonList(res.data.pokemon);\r\n  };\r\n\r\n  // Function to display search results\r\n  const searchPokemonHandler = (e) => {\r\n    // Prevent default submission behavior (page reload)\r\n    e.preventDefault();\r\n\r\n    // Declare a searchResult variable and assign it to the result of the find method\r\n    const searchResult = pokemonList.find(\r\n      (pokemon) => pokemon.name.toLowerCase() === search.toLowerCase()\r\n    );\r\n\r\n    // If a result was found update the list to only include the result, else re-populate pokemon list\r\n    if (searchResult) {\r\n      setPokemonList([searchResult]);\r\n    } else {\r\n      fetchPokemon();\r\n    }\r\n  };\r\n\r\n  // Function to reset search\r\n  const searchResetHandler = () => {\r\n    // Clear search field\r\n    setSearch(\"\");\r\n    // Re-populate list of pokemon\r\n    fetchPokemon();\r\n  };\r\n\r\n  // Function to filter pokemon\r\n  const filterPokemonHandler = (e) => {\r\n    // Prevent default submission behavior (page reload)\r\n    e.preventDefault();\r\n  };\r\n\r\n  // If the pokemonList state is an empty array, run the fetchPokemon function\r\n  useEffect(() => {\r\n    if (!pokemonList.length) {\r\n      fetchPokemon();\r\n    }\r\n  }, [pokemonList]);\r\n  return (\r\n    <>\r\n      <h1>Home Page</h1>\r\n      <h3>Search by Pokemon Name</h3>\r\n      <Form onSubmit={searchPokemonHandler}>\r\n        <Form.Group controlId=\"formSearch\">\r\n          <Form.Label>Pokemon Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Pokemon Name...\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            value={search}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Search\r\n        </Button>\r\n        <Button variant=\"primary\" type=\"button\" onClick={searchResetHandler}>\r\n          Reset\r\n        </Button>\r\n      </Form>\r\n      <h3>Filter Pokemon</h3>\r\n      <Form onSubmit={filterPokemonHandler}>\r\n        <Form.Group controlId=\"formTypeFilterCheckbox\">\r\n          {pokemonTypes.map((type, idx) => (\r\n            <Form.Check inline key={idx} type=\"checkbox\" label={type} />\r\n          ))}\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Apply Filter\r\n        </Button>\r\n      </Form>\r\n      <List pokemonList={pokemonList} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kmulq\\\\Desktop\\\\code\\\\pokedex\\\\src\\\\pages\\\\HomePage\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport List from \"../../components/List\";\n\nconst HomePage = () => {\n  _s();\n\n  // Set pokemonList state and declare it as an empty array\n  const [pokemonList, setPokemonList] = useState([]); // Set search state and declare it as an empty string\n\n  const [search, setSearch] = useState(\"\"); // Function to fetch list of pokemon & set the pokemonList state to the response data\n\n  const fetchPokemon = async () => {\n    const res = await axios.get(\"https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json\");\n    setPokemonList(res.data.pokemon);\n  };\n\n  const searchPokemonHandler = e => {\n    // Prevent default submission behavior (page reload)\n    e.preventDefault();\n    const searchResult = pokemonList.find(pokemon => pokemon.name.toLowerCase() === search.toLowerCase());\n\n    if (searchResult) {\n      console.log(searchResult);\n    } else {\n      console.error(\"No Pokemon found that match the search criteria.\");\n    }\n\n    console.log(search);\n  }; // If the pokemonList state is an empty array, run the fetchPokemon function\n\n\n  useEffect(() => {\n    if (!pokemonList.length) {\n      fetchPokemon();\n    }\n  }, [pokemonList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search by Pokemon Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: searchPokemonHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formSearch\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Pokemon Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Pokemon Name...\",\n          onChange: e => setSearch(e.target.value),\n          value: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      pokemonList: pokemonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"OItzfeYhms3d19TxcTcx1iik6Ts=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/kmulq/Desktop/code/pokedex/src/pages/HomePage/HomePage.js"],"names":["React","useEffect","useState","axios","Form","Button","List","HomePage","pokemonList","setPokemonList","search","setSearch","fetchPokemon","res","get","data","pokemon","searchPokemonHandler","e","preventDefault","searchResult","find","name","toLowerCase","console","log","error","length","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAFqB,CAIrB;;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CALqB,CAOrB;;AACA,QAAMU,YAAY,GAAG,YAAY;AAC/B,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAChB,+EADgB,CAAlB;AAGAL,IAAAA,cAAc,CAACI,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAd;AACD,GALD;;AAOA,QAAMC,oBAAoB,GAAIC,CAAD,IAAO;AAClC;AACAA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,YAAY,GAAGZ,WAAW,CAACa,IAAZ,CAClBL,OAAD,IAAaA,OAAO,CAACM,IAAR,CAAaC,WAAb,OAA+Bb,MAAM,CAACa,WAAP,EADzB,CAArB;;AAGA,QAAIH,YAAJ,EAAkB;AAChBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACD,KAFD,MAEO;AACLI,MAAAA,OAAO,CAACE,KAAR,CAAc,kDAAd;AACD;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACD,GAZD,CAfqB,CA6BrB;;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,WAAW,CAACmB,MAAjB,EAAyB;AACvBf,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACJ,WAAD,CAJM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAES,oBAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,uBAFd;AAGE,UAAA,QAAQ,EAAGC,CAAD,IAAOP,SAAS,CAACO,CAAC,CAACU,MAAF,CAASC,KAAV,CAH5B;AAIE,UAAA,KAAK,EAAEnB;AAJT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAkBE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAsBD,CAzDD;;GAAMD,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport List from \"../../components/List\";\r\n\r\nconst HomePage = () => {\r\n  // Set pokemonList state and declare it as an empty array\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n\r\n  // Set search state and declare it as an empty string\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // Function to fetch list of pokemon & set the pokemonList state to the response data\r\n  const fetchPokemon = async () => {\r\n    const res = await axios.get(\r\n      \"https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json\"\r\n    );\r\n    setPokemonList(res.data.pokemon);\r\n  };\r\n\r\n  const searchPokemonHandler = (e) => {\r\n    // Prevent default submission behavior (page reload)\r\n    e.preventDefault();\r\n    const searchResult = pokemonList.find(\r\n      (pokemon) => pokemon.name.toLowerCase() === search.toLowerCase()\r\n    );\r\n    if (searchResult) {\r\n      console.log(searchResult);\r\n    } else {\r\n      console.error(\"No Pokemon found that match the search criteria.\");\r\n    }\r\n    console.log(search);\r\n  };\r\n\r\n  // If the pokemonList state is an empty array, run the fetchPokemon function\r\n  useEffect(() => {\r\n    if (!pokemonList.length) {\r\n      fetchPokemon();\r\n    }\r\n  }, [pokemonList]);\r\n  return (\r\n    <>\r\n      <h1>Home Page</h1>\r\n      <h3>Search by Pokemon Name</h3>\r\n      <Form onSubmit={searchPokemonHandler}>\r\n        <Form.Group controlId=\"formSearch\">\r\n          <Form.Label>Pokemon Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Pokemon Name...\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            value={search}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Search\r\n        </Button>\r\n      </Form>\r\n      <List pokemonList={pokemonList} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}